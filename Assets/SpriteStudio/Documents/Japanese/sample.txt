=============================================================================
 SpriteStudioPlayer for Unity

 Copyright(C) 2003-2013 Web Technology Corp.
=============================================================================

-----------------------------------------------------------------------------
■サンプルデータについて

Unity プラグインのサンプルとして付属しているアニメーションデータは
SpriteStudio 本体のものを流用しています。
SpriteStudioPlayer for Unity で使用するデータを付与するために、出力機
能が拡張された SpriteStudio で、XML形式(.ssax)にて出力をしなおしています。
またUnity上でドローコールを削減するため一部の画像ファイルを統合しています。

-----------------------------------------------------------------------------
■フォルダ構成と各種ファイルについて

Samples
	BombParticle	GameScene でハチにヒットした際のエフェクトです。
					このデータはUnityのパーティクルを利用したもので、
					SpriteStudioのアニメーションではありません。

	Data		サンプルのシーンで利用しているアニメーションとイメージデータ、
				またそれらをSpriteStudioでまとめて読み込み確認するためのワーク
				スペースファイル(.ssw)が入っています。
		
		antarctic
			antarctic
				ペンギンが右から左へ歩いていくアニメーションです。
				足の動きには「参照元 Xオフセット」「参照元 Yオフセット」を使用
				し、パーツ一つだけで表現しています。

			antarctic2
			antarctic3
				antarctic のアレンジです。歩いているペンギンに、他のペンギンが
				衝突します。
				「カラーブレンド」で、衝突後のペンギンに色を付けています。

		BeeChameleon
			ハチ、カメレオン、背景のアニメーションを個別に組み合わせたものにな
			ります。

		button
			３種類のボタンの絵とアニメーションが入っています。
			文字部分のイメージは別データにしてボタン上に載せています。
			通常状態、フォーカス状態、押された時のフラッシュ状態の３種類のアニ
			メーションが作られています。
			また、上部のボタンはアニメーションの区間指定によって単一のアニメー
			ションでアンフォーカス、フォーカス、クリック時の３パターンを表現し
			ています。
		
		comipo
			いわゆる多関節のキャラクタアニメーションです。
			髪の毛には微妙な座標移動や回転を、スカートに頂点変形などを使いスム
			ーズな動きを実現しています。
			
		effects
			爆発系のエフェクトです。
			カラーブレンドやαブレンドを多く使っています。

		koma
			「コマ方式」のサンプルです。ロボットの動きを、次々と絵を切り替える
			ことで表現しています。絵の切り替えには
			「参照元 Xオフセット」「参照元 Yオフセット」を使用しています。

		vertex
			number
			number2
			「頂点変形」を使用したサンプルです。「回転」などと組み合わせること
			で、非常に多彩な動きを実現できます。

	Scenes
	
		AntarcticScene
			Data/antarctic フォルダ内のアニメーション群を再生します。
		
		BeeScene
			Data/BeeChameleon フォルダ内のアニメーション群を再生します。
		
		ButtonScene
			UIでの利用を想定したボタンを３つ表示し、マウスオーバー、クリックに
			応じてアニメーションを変化させるサンプルです。
		
			Data/button フォルダ内の３種類のボタンアニメーションをシーン上に配
			置し、それらにユーザー操作を監視するスクリプトSsButtonBehaviour を
			アタッチしています。
		
		ColliderScene
			コライダをアタッチしたスプライトオブジェクトのデモです。
			ハチには SphereCollider を、カメレオン、木の棒にはBoxCollider を適
			用しています。
			ハチの落下運動には ConstantForce を利用しています。
		
		ComipoAllScene
			Dana/comipo フォルダ内のアニメーション群を再生してます。
		
		GameScene
			スクリプトによって動的にスプライトオブジェクトを作成し、アニメーシ
			ョンを割り当てるサンプルです。
			キー入力によるスプライトの移動や当たり判定も行なっています。
			詳細は後述します。
			
			マテリアルの動的変更のサンプルとしてハチが追跡モードになった場合に
			マテリアルカラーで赤く色を付けて、通常モードに戻るとマテリアルを元
			に戻す処理を行なっています。
	
		MultiCameraScene
			３Ｄなどのメイン画面を映すカメラと２ＤのＵＩ用カメラを同時に表示す
			るサンプルです。
			UI用に"2D"レイヤを追加して、UI用のカメラのカリングマスクを2Dレイヤ
			のみにして、クリアフラグをDepthOnlyにすることで実現しています。
			"2D" という名前のレイヤは TagsAndLayers ファイルをインポートしない
			と空白の状態になっています。
			詳しくは後述の TagsAndLayers をご覧ください。

		NumberScene
			Data/vertex フォルダ内のアニメーション群を再生してます。
			頂点変形のサンプルアニメーションです。
		
		RoboScene
			Data/koma フォルダ内のアニメーション群を再生してます。
			コマ方式で作られたデータのサンプルです。

	TagsAndLayers
	
		MultiCamera サンプルで利用している"2D"レイヤー名が入っています。
		開いてImportすることでカレントプロジェクトのTag Manager のリストが更新
		されます。
		既存のプロジェクトにインポートする場合は元々あったタグ名、レイヤ名を上
		書きしてしまいますのでご注意下さい。
	
【注意】以下は Ver 0.73 以降で削除されました。

		MixedScene
			複数のアニメーションを同時にシーンに配置しています。
			負荷テストの目的で作ったものです。

-----------------------------------------------------------------------------
■GameScene の説明

シーンの初期状態ではスプライトオブジェクトは配置されていません。
実行開始すると SsGameTest スクリプトによってシーン内にスプライトオブジェクトが
作成されます。

●操作方法

←→				プレイヤーを移動
↑					ジャンプ
Fire1(左クリック)	棒を振る
Fire2(右クリック)	棒切れを投げる
Fire3(中クリック)	ボム発動

●オプションの変更

ヒエラルキの GameMain にフォーカスするとインスペクタ上にいくつか変更可能なパラ
メータが表示されます。

Attack Rate			ハチがプレイヤーめがけて飛んでくる確率です。
Attack Time			ハチ攻撃時の移動時間です。
Penetratable Fire	Onで棒切れが貫通属性になります。
Num Of Bees			一度に出現するハチの総数です。
Sword Length		棒の長さ(倍率)です。
Sword Width			棒の幅(倍率)です。
Bounding Box		当たり判定を示すバウンディングボックスを表示します。

●実装している要素

ハチに棒か棒切れが当たるとBombParticleを発生させハチは墜落していきます。
ハチは画面外に消えると上空に復活します。

ライフや得点などは何もないのでゲームにはなっていませんが、以下の要素について参
考になるかと思います。

・ユーザー入力による座標の移動とアニメーションの変更
・当たり判定
・ユーザーデータの利用方法
・任意のパーツの座標を取得
・あるパーツ座標に別のアニメーションをアタッチする方法
・特定のパーツのみマテリアルを個別化して色を変える。

●利用しているリソース

	BombParticle
	Data/
		BeeChameleon
			bee_ssa
			stick_ssa
			longstick_ssa
		comipo
			stand_ssa
			run_ssa
			jump_ssa
			attack_ssa

●ソースファイルについて

SsGameTest.cs に含まれるクラスについて簡単に説明します。

class SpriteObject : MonoBehaviour

	スプライトの座標とアニメーションの変更の管理を簡単にするためのクラスです。
	初期化時にSsSpriteスクリプトをゲームオブジェクトに追加して、
	Update() でスプライトの座標を更新し、派生クラス固有の更新メソッドを	呼び出
	しています。
	ChangeAnime() ではアニメーションデータ名を文字列で受け取り、SpriteStudio 
	が自動生成するデータベースから該当アニメを探してアタッチしています。

class PlayerObject : SpriteObject
	
	プレイヤーを制御するためのスクリプトです。
	"前手"という名前のパーツに棒スプライトをアタッチしたり、キー入力を監視して
	左右フリップしたり、アニメーションを切り替えたりしています。
	
	Swing() メソッドで棒を振る動作を開始します。
	ここで棒を振るアニメーションの終了時に呼び出されるコールバックとして
	SwingFinished を設定しています。
	
	またアニメーションが"基点"パーツに設定されたユーザーデータとサウンドのキー
	がセットされたフレームに到達した時に呼び出されるコールバックを設定していま
	す。
	
	またスイング中は棒の長さが変えているため変更前の長さを保存しています。
	
	※サウンドキーの部分に関してはデータ側にキーが仕込まれていないため実際には
	  何も動作しません。
	
	ユーザーデータキーが置かれた時間になると OnUserDataKey() が呼び出されます。
	ここでユーザーデータの文字列を参照して"HIT!!!"であれば棒の当たり判定を有効
	にし、"DONE"で無効にしています。
	
	振る動作が完了すると SwingFinished が呼び出され、念のため棒の長さを元に戻
	し当たり判定を無効にしてプレイヤーのアニメを通常状態に戻しています。

class BeeObject : SpriteObject

	ハチを制御するためのスクリプトです。
	
	Start() で初期位置やアニメーション開始フレームをランダムで決定して、まばら
	になるようにしています。

	Reset() で漂うモードかプレイヤー追撃モードかをランダムで決めています。
	
	ここで、ハチの体のパーツのマテリアルのみ個別化した上でマテリアルカラーを変
	更しています。
	（IndividualizeMaterial(), RevertChangedMaterial() の箇所）

class StickObject : SpriteObject

	棒切れを制御するためのスクリプトです。
	
	_Idling() で現在のシーンに登場しているすべてのハチとの衝突判定を行い衝突し
	ている場合は BeeObject の OnHit() を呼び出しています。

class LongStickObject : SpriteObject

	プレイヤーが手に持っている長い棒を制御するためのスクリプトです。
	
	EnableCollision(bool enable) メソッドで当たり判定をOn/Offしています。
	振り上げているモーション中に当たらないようにするためです。
	
	_Swinging() で StickObject と同様に全てのハチとの当たり判定処理を行なって
	います。

class SsGameTest : MonoBehaviour

	ゲーム全体を制御するメインスクリプトです。
	インスペクタから変更や値の確認できるようフィールドはすべてpublicにしてあり
	ます。
	
	Awake() にて必要な数のGameObjectを生成し、前述の各種スクリプトをアタッチし
	ています。



=============================================================================
株式会社ウェブテクノロジ
http://www.webtech.co.jp/
Copyright(C) 2003-2013 Web Technology Corp.
=============================================================================

* SpriteStudio, Web Technologyは、株式会社ウェブテクノロジの登録商標です。
* その他の商品名は各社の登録商標または商標です。

[End of TEXT]
